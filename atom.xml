<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>各式學習記錄Blog！</title>
  <subtitle>t4學習路程！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-09-10T08:30:54.723Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>t4cgbb</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>phpmyadmin配置【Windows】</title>
    <link href="http://yoursite.com/2017/09/10/phpmyadmin%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2017/09/10/phpmyadmin配置/</id>
    <published>2017-09-10T08:45:03.000Z</published>
    <updated>2017-09-10T08:30:54.723Z</updated>
    
    <content type="html"><![CDATA[<h1 id="phpmyadmin配置【Windows】"><a href="#phpmyadmin配置【Windows】" class="headerlink" title="phpmyadmin配置【Windows】"></a>phpmyadmin配置【Windows】</h1><p><img src="https://imgur.com/8nvS1Bw.png" alt=""></p>
<ul>
<li>快速安裝phpmyadmin！</li>
</ul>
<a id="more"></a>
<p><br></p>
<hr>
<h2 id="快速安裝phpmyadmin！"><a href="#快速安裝phpmyadmin！" class="headerlink" title="快速安裝phpmyadmin！"></a>快速安裝phpmyadmin！</h2><hr>
<p>1.來到<a href="https://www.phpmyadmin.net/" target="_blank" rel="external">phpadmin</a>的官方網站。</p>
<p><img src="https://i.imgur.com/kEAxd9Q.jpg" alt=""></p>
<p>2.下載完畢後，解壓到你的web目錄下（apache預設為htdocs）</p>
<p>3.將根目錄下的config.simple.inc.php改名為config.inc.php，開啟後配置短語密碼（blowfish_secret）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$cfg[&apos;blowfish_secret&apos;] = &apos;fhdrqdwdqdwdqw&apos;; /* YOU MUST FILL IN THIS FOR COOKIE AUTH! */</div></pre></td></tr></table></figure>
<p>4.看一下php.ini的extension=php_mbstring.dll（編碼模組）是否被註解，若被註解請移除並使用。</p>
<p>5.登入localhost/phpmyadmin即可成功！</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;phpmyadmin配置【Windows】&quot;&gt;&lt;a href=&quot;#phpmyadmin配置【Windows】&quot; class=&quot;headerlink&quot; title=&quot;phpmyadmin配置【Windows】&quot;&gt;&lt;/a&gt;phpmyadmin配置【Windows】&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://imgur.com/8nvS1Bw.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;快速安裝phpmyadmin！&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://yoursite.com/categories/PHP/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>ATOM好用的插件Php-Debug【Windows】</title>
    <link href="http://yoursite.com/2017/09/05/ATOM%E8%88%87php_debug%E8%88%87Xdbug/"/>
    <id>http://yoursite.com/2017/09/05/ATOM與php_debug與Xdbug/</id>
    <published>2017-09-05T14:10:13.000Z</published>
    <updated>2017-09-10T08:18:20.788Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ATOM好用的插件Php-Debug【Windows】"><a href="#ATOM好用的插件Php-Debug【Windows】" class="headerlink" title="ATOM好用的插件Php-Debug【Windows】"></a>ATOM好用的插件Php-Debug【Windows】</h1><p>今天給大家介紹一個Atom上好用的插件！</p>
<p>可以有效幫助開發者在PHP開發環境下，輕鬆Debug啦！從此告別註解！</p>
<p>以下兩步驟，立刻設定好debug的環境哦！</p>
<ul>
<li>第一步驟：安裝配置xdebug</li>
</ul>
<ul>
<li>第二步驟：安裝php-debug</li>
<li>解析：運作原理</li>
</ul>
<a id="more"></a>
<p><br></p>
<hr>
<h2 id="第一步驟：安裝配置xdebug"><a href="#第一步驟：安裝配置xdebug" class="headerlink" title="第一步驟：安裝配置xdebug"></a>第一步驟：安裝配置xdebug</h2><hr>
<p>1.先到XDEBUG的官方網站來下載！看你php搭配環境是IIS還是Apache去挑選是TS或非TS。</p>
<p><img src="https://imgur.com/mRMjvXJ.png" alt=""></p>
<p>2.下載完畢後，將dll檔扔進php目錄裡的ext目錄裡。</p>
<p>3.在php.ini文檔裡頭寫下如下（附上官方說明：<a href="https://xdebug.org/docs/install）" target="_blank" rel="external">https://xdebug.org/docs/install）</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">zend_extension=&quot;路徑/xdebug檔名&quot;</div></pre></td></tr></table></figure>
<p>4.大功告成啦！重啟後看看php的info裡面有沒有xdebug的模塊就行啦！</p>
<p><br></p>
<hr>
<h2 id="第二步驟：安裝php-debug"><a href="#第二步驟：安裝php-debug" class="headerlink" title="第二步驟：安裝php-debug"></a>第二步驟：安裝php-debug</h2><hr>
<p>1.打開Atom，安裝php-debug的插件。</p>
<p>2.安裝完畢後，配置參數，請在php.ini裡添加如下配置（說明文檔：<a href="https://atom.io/packages/php-debug）" target="_blank" rel="external">https://atom.io/packages/php-debug）</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[xdebug]  </div><div class="line">xdebug.remote_enable=1</div><div class="line">xdebug.remote_host=127.0.0.1</div><div class="line">xdebug.remote_connect_back=1</div><div class="line">xdebug.remote_port=9000</div><div class="line">xdebug.remote_handler=dbgp</div><div class="line">xdebug.remote_mode=req</div><div class="line">xdebug.remote_autostart=true</div></pre></td></tr></table></figure>
<p>2.設置好後，重啟Apache，並打開Atom，基本上就能使用Debug的功能了！</p>
<p><img src="https://imgur.com/g5nfljP.png" alt=""></p>
<p><br></p>
<hr>
<h2 id="解析：運作原理"><a href="#解析：運作原理" class="headerlink" title="解析：運作原理"></a>解析：運作原理</h2><hr>
<p><img src="https://xdebug.org/images/docs/dbgp-setup.gif" alt="img"></p>
<p>1.伺服器為10.0.1.2、端口80（預設），IDE（ATOM）在10.0.1.42的環境，所以xdebug.remote_host設定為10.0.1.2。</p>
<p>2.IDE（ATOM）傾聽9000的port，所以xdebug.remote_port設定為9000。</p>
<p>3.開啟IDE（ATOM）後會自動監聽10.0.1.2 9000的端口，透過php的xdeubg在開啟網頁後，即會利用DBGP協議建立起連接，並且將結果送回給IDE（ATOM）。</p>
<p>如果發生以下問題：</p>
<p>1.為什麼ATOM一直listening的字樣？</p>
<p>A：檢查php的設定是否配置正確、80端口跟9000端口是否正確開啟或被佔用等、檢查atom中php_debug的設定，並配置path即可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ATOM好用的插件Php-Debug【Windows】&quot;&gt;&lt;a href=&quot;#ATOM好用的插件Php-Debug【Windows】&quot; class=&quot;headerlink&quot; title=&quot;ATOM好用的插件Php-Debug【Windows】&quot;&gt;&lt;/a&gt;ATOM好用的插件Php-Debug【Windows】&lt;/h1&gt;&lt;p&gt;今天給大家介紹一個Atom上好用的插件！&lt;/p&gt;
&lt;p&gt;可以有效幫助開發者在PHP開發環境下，輕鬆Debug啦！從此告別註解！&lt;/p&gt;
&lt;p&gt;以下兩步驟，立刻設定好debug的環境哦！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一步驟：安裝配置xdebug&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;第二步驟：安裝php-debug&lt;/li&gt;
&lt;li&gt;解析：運作原理&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://yoursite.com/categories/PHP/"/>
    
    
      <category term="debug" scheme="http://yoursite.com/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>WAMP架設指南</title>
    <link href="http://yoursite.com/2017/09/04/WAMP%E6%9E%B6%E8%A8%AD%E6%8C%87%E5%8D%97/"/>
    <id>http://yoursite.com/2017/09/04/WAMP架設指南/</id>
    <published>2017-09-04T15:10:13.000Z</published>
    <updated>2017-09-10T08:04:44.274Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WAMP架設指南"><a href="#WAMP架設指南" class="headerlink" title="WAMP架設指南"></a>WAMP架設指南</h1><p>本篇介紹apache2.4.27 + PHP7.19 + Mysql5.7.19 在Windows10底下應該如何配置的教學！</p>
<p><img src="http://www.centumsol.com/wp-content/uploads/2012/12/LAMPP_Architecture.png" alt="WAMP輕鬆學會架設網頁伺服器"></p>
<a id="more"></a>
<p><br></p>
<hr>
<h2 id="A：Apache環境架設"><a href="#A：Apache環境架設" class="headerlink" title="A：Apache環境架設"></a>A：Apache環境架設</h2><hr>
<p>1.首先來到主畫面，可以看到包含Apache在內有許多的集成軟體可以使用，不過這邊因為要單獨架設，所以請選擇Apache Lounge。</p>
<p><img src="http://i.imgur.com/cRheDXt.png" alt="apache主頁面"></p>
<p>2.這邊就可以針對自己的windows來下載apcahe！</p>
<p><img src="https://imgur.com/2ePfbbX.jpg" alt=""></p>
<p>3.解壓後如下圖！</p>
<p><img src="https://imgur.com/vst9OPi.png" alt=""></p>
<p>4.打開conf裡的httpd.conf，開始我們的設定啦！</p>
<p>5.必須設定如下：</p>
<p>（一）ServerRoot（apache目錄）</p>
<p>（二）ServerName（服務器名稱）</p>
<p>（三）DocumentRoot（修改網站根目錄地址）自行設置，通常會設置在apache目錄裡的htdocs</p>
<p>（四）Directory（網站根目錄位址，通常拿來設定權限使用）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;Directory &quot;****\htdocs&quot;&gt;</div><div class="line">Options Indexs FollowSymLinks	//如果目錄下找不到首頁檔案（預設index.html）則顯示整個目錄下檔案名稱</div><div class="line">AllowOverride None	//字面意思允許覆寫 參數：all:全部、AuthConfig：認證可None：不可覆寫.htacces失效</div><div class="line">Require all granted //允許所有存取（=order allow, deny   Allow from all）</div><div class="line">&lt;/Directory&gt;</div></pre></td></tr></table></figure>
<p>(五)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ScriptAlias /cgi-bin/ &quot;c:/Apache24/cgi-bin/&quot;		\\在使用cgi-bin時，指向後面真實路徑</div><div class="line"></div><div class="line">&lt;Directory &quot;c:/Apache24/cgi-bin&quot;&gt;					\\設定權限</div><div class="line">    AllowOverride None</div><div class="line">    Options None</div><div class="line">    Require all granted</div><div class="line">&lt;/Directory&gt;</div></pre></td></tr></table></figure>
<p>6.配置完畢後，輸入httpd -t，可驗證conf是否有錯誤。</p>
<p>httpd -k install -n apache（安裝服務，叫做apache）</p>
<p>httpd -k uninstall（）</p>
<p><img src="https://imgur.com/A165V5j.png" alt=""></p>
<p>7.安裝服務：httpd -k install，下圖即配置成功，如果要自己改名記得加個-n就行了            （卸載服務為httpd -k uninstall）</p>
<p><img src="https://imgur.com/VnMHb9i.png" alt=""></p>
<p>如果出現如下端口佔用的情況</p>
<p><img src="https://pic3.zhimg.com/v2-d14df0ddec58f6e62bcfbaf68c27a4f6_r.png" alt=""></p>
<p>有兩種解決方法：</p>
<p>1.在httpd.conf裡找到Listen 80改為其他端口。</p>
<p>2.在dos輸入命令netstat -ano  查看佔用端口，然後使用taskkill -f -t -im  程序名  結束掉它。</p>
<p>8.啟動服務：httpd -k start （停止服務是stop 重啟是restart）</p>
<p>（這邊補充一下服務的六大口訣：安裝、啟動、開機啟動、防火牆、測試、上傳資料，基本上若服務有問題從中就能解決了。）</p>
<p>9.Apache環境設定成功啦！</p>
<p><img src="https://imgur.com/arsHb5q.png" alt=""></p>
<p><br></p>
<hr>
<h2 id="P：PHP環境架設"><a href="#P：PHP環境架設" class="headerlink" title="P：PHP環境架設"></a>P：PHP環境架設</h2><hr>
<p>1.從官方下載PHP。</p>
<p><img src="https://imgur.com/plCjnU4.png" alt=""></p>
<p>2.一般來說Apache環境下的PHP會選擇Thread Safe（簡稱：TS版）來架設。</p>
<p>3.解壓後，開啟apache的httpd.conf在最下面配置這四條：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">AddHandler application/x-httpd-php .php	</div><div class="line">AddType application/x-httpd-php .php .html .htm						//檔案名、若無則.php不會run</div><div class="line">DirectoryIndex index.html index.htm index.php index.html 			//目錄有這些檔名直接執行</div><div class="line">LoadModule php7_module &quot;D:\softeware\code\web server\php\php7apache2_4.dll&quot;	//載入php7模塊</div><div class="line">PHPIniDir &quot;D:\softeware\code\web server\php&quot;	//若有配置php.ini則載入</div></pre></td></tr></table></figure>
<p>4.寫一段php的code</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">phpinfo();</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<p>5.php配置成功！</p>
<p><img src="https://imgur.com/f5IQcf3.png" alt=""></p>
<p><br></p>
<hr>
<h2 id="M：MYSQL環境架設"><a href="#M：MYSQL環境架設" class="headerlink" title="M：MYSQL環境架設"></a>M：MYSQL環境架設</h2><hr>
<p>1.首先到官方下載Mysql。</p>
<p><img src="https://imgur.com/HKYxgXT.png" alt=""></p>
<p>2.再完成mysql安裝後（請自行依照需求安裝），我們要配置php的設置，大致上就如下圖</p>
<p><img src="https://cdn.lynda.com/courses/362875-635573449041298772_338x600_thumb.jpg" alt=""></p>
<p>與php相關的我們配置apache的httpd.conf，與sql相關的我們則配置php的設置。</p>
<p>3.複製php.ini-development，貼上後改名為php.ini。</p>
<p>4.將extension_dir=”ext”#拿掉，並修改解壓後php中ext的路徑位置。</p>
<p>5.將#extension=php_mysql.dll的#拿掉。</p>
<p>6.配置完成！</p>
<p>7.開始測試！首先開啟Mysql5.7 Command Line Client！</p>
<p>8.登入後，創建資料庫 。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">create database　【資料庫名字】</div></pre></td></tr></table></figure>
<p>9.選擇資料庫。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">use 【資料庫名字】</div></pre></td></tr></table></figure>
<p>10.創建資料表</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">create table test(</div><div class="line">name char(10),</div><div class="line">time datetime</div><div class="line">);</div></pre></td></tr></table></figure>
<p>11.查詢是否新建成功</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select * from test;</div></pre></td></tr></table></figure>
<p>12撰寫php</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line"></div><div class="line">	$connection = mysqli_connect(&apos;localhost&apos;,&apos;root&apos;,&apos;root&apos;,&apos;testDB&apos;)</div><div class="line">		or die(&apos;開啟失敗！&apos;);</div><div class="line">		</div><div class="line">	$result = mysqli_query($connection,&quot;select * from test&quot;)</div><div class="line">		or die (&apos;sql指令錯誤！&apos;);</div><div class="line">		</div><div class="line">	while($row = mysqli_fetch_array($result))&#123;</div><div class="line">		echo $row[0]; ?&gt;&lt;br&gt;&lt;?php</div><div class="line">		echo $row[1];</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">	mysqli_close($connection);</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<p>13.畫面顯示出來，代表php配置無誤！</p>
<p><img src="https://i.imgur.com/8EWAmWF.png" alt=""></p>
<p><br></p>
<hr>
<h2 id="疑難雜症"><a href="#疑難雜症" class="headerlink" title="疑難雜症"></a>疑難雜症</h2><hr>
<p>Q1：遇到無法啟動此程序，因為電腦丟師VCRUNTIME140.dll怎麼辦？</p>
<p><img src="https://pic4.zhimg.com/v2-bf593ff3824b36072cdcbc6a7544bb1f_b.png" alt="img"></p>
<p>回答：需要安裝c++2015及其他相關套件，安裝即可解決問題。</p>
<p>Q2：遇到嘗試存取通訊端被拒絕，因為存取權限不足怎麼辦？</p>
<p><img src="https://imgur.com/a3ixzdh.jpg" alt=""></p>
<p>回答：解決方法有兩個，一個是改你httpd.conf的Listen端口。</p>
<p>​    二則是找到那個被佔用的端口程序，然後把它關掉。</p>
<p>要尋找佔用的程序請用netstat下去尋找，比如：netstat -nao |find “0.0.0.0:8080”</p>
<p>就能找到程序，並找到PID在管理員那邊關掉它（當然你也能打指令把它關掉）</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;WAMP架設指南&quot;&gt;&lt;a href=&quot;#WAMP架設指南&quot; class=&quot;headerlink&quot; title=&quot;WAMP架設指南&quot;&gt;&lt;/a&gt;WAMP架設指南&lt;/h1&gt;&lt;p&gt;本篇介紹apache2.4.27 + PHP7.19 + Mysql5.7.19 在Windows10底下應該如何配置的教學！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.centumsol.com/wp-content/uploads/2012/12/LAMPP_Architecture.png&quot; alt=&quot;WAMP輕鬆學會架設網頁伺服器&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="網站相關" scheme="http://yoursite.com/categories/%E7%B6%B2%E7%AB%99%E7%9B%B8%E9%97%9C/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
      <category term="apache" scheme="http://yoursite.com/tags/apache/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript～this的四大類！</title>
    <link href="http://yoursite.com/2017/08/25/JS_this/"/>
    <id>http://yoursite.com/2017/08/25/JS_this/</id>
    <published>2017-08-25T12:10:13.000Z</published>
    <updated>2017-08-25T12:16:56.093Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaScript～this的四大類！"><a href="#JavaScript～this的四大類！" class="headerlink" title="JavaScript～this的四大類！"></a>JavaScript～this的四大類！</h1><ul>
<li>this調用四種！</li>
</ul>
<p>JavaScript的this到底要怎麼看呢？方法諸多，奇行怪樣！</p>
<p><strong>時刻把握住一個重點，那就是永遠指向它的上一層即可！</strong></p>
<p>this大致上可以分成以下四種方法ヽ(●´∀`●)ﾉ</p>
<a id="more"></a>
<p><br></p>
<hr>
<h2 id="全局變數"><a href="#全局變數" class="headerlink" title="全局變數"></a>全局變數</h2><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">this;  //指向上一層，因為是在JS瀏覽器中運行，所以全局對象是window。</div></pre></td></tr></table></figure>
<p><br></p>
<hr>
<h2 id="函數調用"><a href="#函數調用" class="headerlink" title="函數調用"></a>函數調用</h2><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">test();  	//this同樣會指向全局對象windows</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var a = 5;</div><div class="line">function test()&#123;</div><div class="line">  console.log(a);</div><div class="line">&#125;</div><div class="line">test();			// this指向全局變數 output 5</div></pre></td></tr></table></figure>
<p><br></p>
<hr>
<h2 id="方法調用"><a href="#方法調用" class="headerlink" title="方法調用"></a>方法調用</h2><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">obj.test();		//this會指向obj</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">function test()&#123;</div><div class="line">  var a = 10;</div><div class="line">  console.log(this.a);</div><div class="line">&#125;</div><div class="line"></div><div class="line">var obj = &#123;</div><div class="line">  a:2,</div><div class="line">  test:test</div><div class="line">&#125;;</div><div class="line"></div><div class="line">obj.test();		//this指向obj裡面的a output 2</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">function test()&#123;</div><div class="line">  var a = 10;</div><div class="line">  console.log(this.a);</div><div class="line">&#125;</div><div class="line"></div><div class="line">var obj1 = &#123;</div><div class="line">  a:50,</div><div class="line">  test:test</div><div class="line">&#125;;</div><div class="line"></div><div class="line">var obj = &#123;</div><div class="line">  a:2,</div><div class="line">  obj1:obj1</div><div class="line">&#125;;</div><div class="line"></div><div class="line">obj.obj1.test();	//this指向obj1的a output 50</div></pre></td></tr></table></figure>
<p><br></p>
<hr>
<h2 id="建立物件"><a href="#建立物件" class="headerlink" title="建立物件"></a>建立物件</h2><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">new test();		//如果使用new，則this會指向新創建的物件。</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">var a = 3;</div><div class="line"></div><div class="line">function test(a)&#123;</div><div class="line">  this.a = a;</div><div class="line">&#125;</div><div class="line"></div><div class="line">var _result = new test(2);</div><div class="line">console.log(_result.a);		//this指向新物件的a而非全局對象。</div></pre></td></tr></table></figure>
<p><br></p>
<hr>
<h2 id="Apply綁定（硬約束）"><a href="#Apply綁定（硬約束）" class="headerlink" title="Apply綁定（硬約束）"></a>Apply綁定（硬約束）</h2><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">function test(something)&#123;</div><div class="line">  console.log(this.a, something );			//output 2 3</div><div class="line">  return this.a + something;</div><div class="line">&#125;</div><div class="line"></div><div class="line">var obj = &#123;</div><div class="line">  a:2</div><div class="line">&#125;;</div><div class="line"></div><div class="line">var bar = function()&#123;</div><div class="line">  return test.apply(obj, arguments);    //arguemnts類陣列</div><div class="line">&#125;</div><div class="line"></div><div class="line">var b = bar(3);</div><div class="line">console.log(test.call(obj,10));		//ouput 2 10</div><div class="line">console.log(b);						//output 5</div><div class="line"></div><div class="line">/* apply跟call差異在apply只要帶入一個陣列，call則必須逐一帶入！*/</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;JavaScript～this的四大類！&quot;&gt;&lt;a href=&quot;#JavaScript～this的四大類！&quot; class=&quot;headerlink&quot; title=&quot;JavaScript～this的四大類！&quot;&gt;&lt;/a&gt;JavaScript～this的四大類！&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;this調用四種！&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;JavaScript的this到底要怎麼看呢？方法諸多，奇行怪樣！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;時刻把握住一個重點，那就是永遠指向它的上一層即可！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;this大致上可以分成以下四種方法ヽ(●´∀`●)ﾉ&lt;/p&gt;
    
    </summary>
    
      <category term="Javascript" scheme="http://yoursite.com/categories/Javascript/"/>
    
    
      <category term="JS" scheme="http://yoursite.com/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>組裝電腦需知！軟硬體常識大匯集！</title>
    <link href="http://yoursite.com/2017/08/20/%E7%B5%84%E8%A3%9D%E9%9B%BB%E8%85%A6%E9%9C%80%E7%9F%A5%EF%BC%81%E8%BB%9F%E7%A1%AC%E9%AB%94%E5%B8%B8%E8%AD%98%E5%A4%A7%E5%8C%AF%E9%9B%86%EF%BC%81/"/>
    <id>http://yoursite.com/2017/08/20/組裝電腦需知！軟硬體常識大匯集！/</id>
    <published>2017-08-20T07:55:15.000Z</published>
    <updated>2017-08-20T08:03:05.111Z</updated>
    
    <content type="html"><![CDATA[<h1 id="組裝電腦需知！軟硬體常識大匯集！"><a href="#組裝電腦需知！軟硬體常識大匯集！" class="headerlink" title="組裝電腦需知！軟硬體常識大匯集！"></a>組裝電腦需知！軟硬體常識大匯集！</h1><ul>
<li>電腦內部有什麼？</li>
<li>電腦外部有什麼？</li>
</ul>
<p>又快到年底啦！不知道有多少人也考慮要換一台電腦，迎向新的一年，比起去外面買一台幾年就要換的套裝機，何不來自己組組換一台呢？</p>
<p><strong>這邊就給大家普及知識啦！</strong></p>
<a id="more"></a>
<p><br></p>
<hr>
<h2 id="電腦內部有什麼？"><a href="#電腦內部有什麼？" class="headerlink" title="電腦內部有什麼？"></a>電腦內部有什麼？</h2><hr>
<p><br></p>
<p><a href="http://i.imgur.com/zLqmgmp.png" target="_blank" rel="external">圖片太小請自行點此放大觀看~</a></p>
<p><img src="http://i.imgur.com/zLqmgmp.png" alt="電腦內部硬體"></p>
<p><br></p>
<p><br></p>
<hr>
<h2 id="電腦外部有什麼？"><a href="#電腦外部有什麼？" class="headerlink" title="電腦外部有什麼？"></a>電腦外部有什麼？</h2><hr>
<p><br></p>
<p><img src="http://i.imgur.com/48rIjNK.png" alt="電腦外部周邊"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;組裝電腦需知！軟硬體常識大匯集！&quot;&gt;&lt;a href=&quot;#組裝電腦需知！軟硬體常識大匯集！&quot; class=&quot;headerlink&quot; title=&quot;組裝電腦需知！軟硬體常識大匯集！&quot;&gt;&lt;/a&gt;組裝電腦需知！軟硬體常識大匯集！&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;電腦內部有什麼？&lt;/li&gt;
&lt;li&gt;電腦外部有什麼？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又快到年底啦！不知道有多少人也考慮要換一台電腦，迎向新的一年，比起去外面買一台幾年就要換的套裝機，何不來自己組組換一台呢？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;這邊就給大家普及知識啦！&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="電腦硬體" scheme="http://yoursite.com/categories/%E9%9B%BB%E8%85%A6%E7%A1%AC%E9%AB%94/"/>
    
    
      <category term="組裝" scheme="http://yoursite.com/tags/%E7%B5%84%E8%A3%9D/"/>
    
      <category term="電腦硬體" scheme="http://yoursite.com/tags/%E9%9B%BB%E8%85%A6%E7%A1%AC%E9%AB%94/"/>
    
  </entry>
  
  <entry>
    <title>淺談DNS到底是什麼！</title>
    <link href="http://yoursite.com/2017/08/15/%E6%B7%BA%E8%AB%87DNS%E5%88%B0%E5%BA%95%E6%98%AF%E4%BB%80%E9%BA%BC%EF%BC%81/"/>
    <id>http://yoursite.com/2017/08/15/淺談DNS到底是什麼！/</id>
    <published>2017-08-15T05:19:41.000Z</published>
    <updated>2017-08-15T09:19:21.072Z</updated>
    
    <content type="html"><![CDATA[<h1 id="兩步驟帶你瞭解DNS！"><a href="#兩步驟帶你瞭解DNS！" class="headerlink" title="兩步驟帶你瞭解DNS！"></a>兩步驟帶你瞭解DNS！</h1><ul>
<li>第一步驟：什麼是DNS？</li>
<li>第二步驟：DNS的運作方式？</li>
</ul>
<p>網域名稱系統（英文：Domain Name System，縮寫：<strong>DNS</strong>）是網際網路的一項服務。 它作為將域名和IP位址相互對映的一個分散式資料庫，能夠使人更方便地存取網際網路。</p>
<p><strong>請問各位瞭解了嗎？</strong></p>
<a id="more"></a>
<p><br></p>
<hr>
<h2 id="第一步驟：什麼是DNS？"><a href="#第一步驟：什麼是DNS？" class="headerlink" title="第一步驟：什麼是DNS？"></a>第一步驟：什麼是DNS？</h2><hr>
<p><br><br>DNS，嗯，如果要講的累贅一點，首先就是copy一段：</p>
<p>網域名稱系統（英文：Domain Name System，縮寫：<strong>DNS</strong>）是網際網路的一項服務。 它作為將域名和IP位址相互對映的一個分散式資料庫，能夠使人更方便地存取網際網路。<br><br><br><strong>請問各位瞭解了嗎？</strong></p>
<p><br></p>
<p>打開自己大二時期整理的資料庫重點：</p>
<p><img src="http://imgur.com/kx9r03S.png" alt="資料庫設計"></p>
<p><strong>窩擦！這到底是什麼鬼？請問大大是在裝B嗎？</strong></p>
<p><br></p>
<p>不、其實我剛才一打開，還真完全看不懂這是什麼東西，愣了一會兒才知道他是什麼東西，反正有興趣要把資料庫基本知識補齊的，就去把這些文謅謅的知識補一補吧！</p>
<p>記得補完最好做個知識連接啦！不然很快就會忘記它到底是什麼。</p>
<p><br></p>
<p>好了回歸正題，DNS給你們一個印象，如果第一次接觸它，是這樣的東西：</p>
<ul>
<li>平時你看不到他</li>
</ul>
<ul>
<li>但卻常常用到它</li>
</ul>
<p><br></p>
<p>上述看完，你就已經初步瞭解DNS了，再來進階瞭解：</p>
<ul>
<li><p>現在你在看的這個網站，網址是t4cgbb.space，這就是DNS的作用</p>
</li>
<li><p>如果沒有DNS，網際網路就會崩盤。<br><br></p>
</li>
</ul>
<p>接觸過網路的人都明白IP Address，一般來說網路連接是透過Network layer來定位IP Address，所以<strong>直接輸入網址什麼的，就必須透過DNS來轉換啦！</strong></p>
<p>有人可能會問，那為什麼我在自家弄了個私有網站時，可以透過localhsot來看到頁面，這個能從本機的hosts文檔中看到127.0.0.1對應到localhost，可以測試看看輸入一組IP對應到一些知名網站試試看，網站立刻就連不上了。</p>
<p>這個可以模擬成沒有DNS的環境就是這樣啦！因為在找DNS之前，會先去找hosts的文檔！</p>
<p><br><br><strong>言而總之，DNS就是幫你解析域名（<a href="https://t4cgbb.space/2017/08/14/%E7%94%A8hexo%E5%9C%A8github%E5%BB%BA%E7%AB%8B%E5%80%8B%E4%BA%BA%E7%B6%B2%E7%AB%99/" target="_blank" rel="external">申請域名請點我</a>）的一個東東就是啦！</strong><br><br></p>
<hr>
<h2 id="第二步驟：DNS的運作方式？"><a href="#第二步驟：DNS的運作方式？" class="headerlink" title="第二步驟：DNS的運作方式？"></a>第二步驟：DNS的運作方式？</h2><hr>
<p><br><br><img src="http://i.imgur.com/EnQJs7r.jpg" alt="DNS運作"></p>
<p>嘛、運作大概就如上圖，首先會從本地查起（上述提到的hosts檔）沒有的話，則會從你網址的尾部查起，比如xxx.com.tw，在解析時，會先從tw的服務器查起，然後再查.com，最後看看你域名哪買的或有沒有託管，對應到那個地方去。</p>
<p><strong>DNS是階層式管理的</strong>，這樣做的好處，就是當下面機器對應有問題時，直接先查上面的機器就行了，不用跨到更高層，除錯也比較容易！</p>
<p><strong>總結來說，一個域名最開始比如t4cgbb.space這個域名，當你的主機要解析時，透過DNS的方式會先從最頂層的.(root)查詢，root在把問題丟給.space的伺服器，.space的伺服器再丟給t4cgbb.space，最後完成查詢。</strong></p>
<p>舉個例子，當你想查某些事情，打給中央的政府機構的總機時（根），他就會幫你轉接到相關部門（.space），然後相關部門發現這個是你們那個地區負責的，於是在轉接到你們當地的單位（t4cgbb.space）。</p>
<p>概念就類似這樣啦！</p>
<p><br></p>
<hr>
<h2 id="其他介紹"><a href="#其他介紹" class="headerlink" title="其他介紹"></a>其他介紹</h2><hr>
<p><br></p>
<p>在註冊完域名後，往往可以設定域名的DNS，這邊就簡單先講一下，最常用的就是ipv4的A標誌，可以指向你的二級域名，比如t4cgbb.space可以在二級域名，像是www.t4cgbb.space出來。</p>
<p>當然CNAME也是一個利器，至少在IP改變後，改對應的一個A指標就能完成所有CNAME的更改，如果沒用CNAME而是A標誌，那可就累了，比如有100條A標誌，那就得改一百次啦！</p>
<p>這篇就先簡單讓大家對DNS有個最基礎的概念就好了！<br><br></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;兩步驟帶你瞭解DNS！&quot;&gt;&lt;a href=&quot;#兩步驟帶你瞭解DNS！&quot; class=&quot;headerlink&quot; title=&quot;兩步驟帶你瞭解DNS！&quot;&gt;&lt;/a&gt;兩步驟帶你瞭解DNS！&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;第一步驟：什麼是DNS？&lt;/li&gt;
&lt;li&gt;第二步驟：DNS的運作方式？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;網域名稱系統（英文：Domain Name System，縮寫：&lt;strong&gt;DNS&lt;/strong&gt;）是網際網路的一項服務。 它作為將域名和IP位址相互對映的一個分散式資料庫，能夠使人更方便地存取網際網路。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;請問各位瞭解了嗎？&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="網路" scheme="http://yoursite.com/categories/%E7%B6%B2%E8%B7%AF/"/>
    
    
      <category term="DNS" scheme="http://yoursite.com/tags/DNS/"/>
    
  </entry>
  
  <entry>
    <title>用hexo在github建立個人網站</title>
    <link href="http://yoursite.com/2017/08/14/%E7%94%A8hexo%E5%9C%A8github%E5%BB%BA%E7%AB%8B%E5%80%8B%E4%BA%BA%E7%B6%B2%E7%AB%99/"/>
    <id>http://yoursite.com/2017/08/14/用hexo在github建立個人網站/</id>
    <published>2017-08-13T16:00:00.000Z</published>
    <updated>2017-08-15T07:23:32.213Z</updated>
    
    <content type="html"><![CDATA[<h1 id="架設Hexo在Github四步驟！"><a href="#架設Hexo在Github四步驟！" class="headerlink" title="架設Hexo在Github四步驟！"></a>架設Hexo在Github四步驟！</h1><ul>
<li>第一步驟：準備好你的github及環境配置</li>
</ul>
<ul>
<li>第二步驟：hexo的安裝</li>
</ul>
<ul>
<li>第三步驟：將hexo上傳github</li>
</ul>
<ul>
<li>第四步驟：申請域名綁定域名！（自行選配）</li>
</ul>
<a id="more"></a>
<p><br></p>
<hr>
<h2 id="第一步驟：準備好你的github"><a href="#第一步驟：準備好你的github" class="headerlink" title="第一步驟：準備好你的github"></a>第一步驟：準備好你的github</h2><hr>
<p><br><br>1.先到官網將帳號註冊完畢，點選右上角的+號選擇New repository。</p>
<p>2.因為要做個人站點，按官方github說明文件，我們必須取「你的帳號名稱」.github.io**的格式。</p>
<p>3.安裝<a href="https://git-scm.com/download/win" target="_blank" rel="external">git</a>（主要是為了上傳站點，還有每次如果修改好hexo檔案後，所必須具備的軟體），下載下來並安裝。</p>
<p>4.安裝成功後，可在cmd畫面查看。<br><img src="https://i.gyazo.com/ac5ffa585824ffa7eb1f532ce6e13bf9.png" alt="git安裝成功"></p>
<p>5.接下來使用git來配置github的帳戶與密碼：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.name &quot;你的github用戶名&quot;</div><div class="line">git config --global user.email &quot;你的github註冊郵箱&quot;</div></pre></td></tr></table></figure></p>
<p><br><br>6.生成ssh密鑰文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C <span class="string">"你的github註冊郵箱"</span></div></pre></td></tr></table></figure></p>
<p><img src="https://i.gyazo.com/e2dc9868b00de29c8d3ea14cd75ca765.png" alt="生成公鑰圖"></p>
<p><br><br>7.打開<a href="http://link.zhihu.com/?target=https%3A//github.com/settings/keys" target="_blank" rel="external">GitHub_Settings_keys</a>頁面 ，新建new SSH Key，將id_rsa.pub的內容黏貼到key裡頭。<br><img src="https://i.gyazo.com/b3c978b27ac5427918f34e39a67b16e0.png" alt="KEY"></p>
<p>8.設定成功後，會出下如下畫面，這樣以後跟github做連接，概念如圖二，在自己本地電腦生成一對公鑰跟私鑰，公鑰傳給github，當要連接過去的時候，github上面的公鑰會與你電腦上的私鑰匹配，若是正確則連接。<br><img src="https://i.gyazo.com/c209f37eb94b78dc38f54a12a6fcaa91.png" alt="ssh登入成功"></p>
<p><img src="https://docstore.mik.ua/orelly/networking_2ndEd/ssh/figs/ssh_0202.gif" alt="ssh概念圖"></p>
<p>9.安裝<a href="https://nodejs.org/en/download/" target="_blank" rel="external">node.js</a>,安裝完畢後，輸入node -v查看是否安裝成功，看見版本號後就大功告成！</p>
<p><br></p>
<hr>
<h2 id="第二步驟：hexo的安裝"><a href="#第二步驟：hexo的安裝" class="headerlink" title="第二步驟：hexo的安裝"></a>第二步驟：hexo的安裝</h2><hr>
<p><br></p>
<p>1.先創建一個資料夾（你站點的位置想放哪就創哪），創建完畢後開啟cmd，移到那個資料夾，輸入以下指令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo-cli</div></pre></td></tr></table></figure>
<p>2.接著初始化站點（就是會把一些基本設置寫進你的自訂資料夾裡）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init [自定資料夾名字]</div></pre></td></tr></table></figure>
<p>3.建立一篇新文章</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo new [layout] &lt;title&gt;  //格式</div><div class="line">hexo new test  //我們建立打這樣，使用預設的樣版。</div></pre></td></tr></table></figure>
<p>4.產生靜態檔案（兩個指令都可，一個全寫、一個簡稱）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo generate</div><div class="line">hexo g</div></pre></td></tr></table></figure>
<p>5.在本機上啟動服務器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo server</div><div class="line">hexo s</div></pre></td></tr></table></figure>
<p>6.輸入localhost:4000就可以看見站點了！</p>
<p><img src="http://r12f-cdn.azureedge.net/r12f-assets/post_assets/2017-02-05-building-blog-with-hexo-and-github-pages/hexo-first-blog.png" alt="hexo index"></p>
<p>hexo一些常用的指令可以到<a href="https://hexo.io/zh-tw/docs/commands.html" target="_blank" rel="external">官網</a>去看，像是hexo如果升級了指令怎麼打，如何清除快取檔，創建新文章等等……</p>
<p><br></p>
<hr>
<h2 id="第三步驟：將hexo上傳github"><a href="#第三步驟：將hexo上傳github" class="headerlink" title="第三步驟：將hexo上傳github"></a>第三步驟：將hexo上傳github</h2><hr>
<p><br><br>1.根資料夾下（不是theme裡面的，那個是主題配置）找到_config.yml的站點配置文件，以文本方式開啟即可。</p>
<p>2.開啟後，搜尋deploy，修改如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">type: git</div><div class="line">repo: 填寫你的github的網址</div><div class="line">branch: master	//「你的帳號名稱」.github.io這種格式只能在master發佈</div><div class="line">message: 自定義你的提交訊息(預設是 Site updated: &#123;&#123; now(&apos;YYYY-MM-DD HH:mm:ss&apos;) &#125;&#125;)</div></pre></td></tr></table></figure>
<p>3.再來安裝hexo-deployer-git（這是github才要裝的，像是hereku那些又是另外插件）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>
<p>4.分別輸入以下三條指令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo clean		//這是清除db.json（快取檔案）跟已經生成的靜態檔案（public)</div><div class="line">hexo g			//生成靜態檔案</div><div class="line">hexo d			//部署到你剛剛文檔設定的伺服器上</div></pre></td></tr></table></figure>
<p>5.部署成功！</p>
<p><img src="https://i.gyazo.com/2d1f2607e6662d343987806444603774.png" alt="hexo部署成功"></p>
<p>6.請輸入<strong>「你的帳號名稱」.github.io</strong>，沒有意外的話就會出現你的站點首頁了！</p>
<p><br></p>
<hr>
<h2 id="第四步驟：申請域名綁定域名！（自行選配）"><a href="#第四步驟：申請域名綁定域名！（自行選配）" class="headerlink" title="第四步驟：申請域名綁定域名！（自行選配）"></a>第四步驟：申請域名綁定域名！（自行選配）</h2><hr>
<p> <br></p>
<p>1.這邊介紹<a href="https://tw.godaddy.com/" target="_blank" rel="external">GoDaddy</a>，購買域名是必須花錢的，不過可以嘗試買一個一年的域名來試試看，大概就一杯珍奶還有找的價格。</p>
<p><img src="http://www.webbuildersguide.com/wp-content/uploads/godaddy_review/1.jpg" alt=""></p>
<p><br><br>2.註冊會員後，直接輸入自己想要的域名，就可以加入購物車購買了，不過結帳時請記得去找<a href="https://www.dute.me/" target="_blank" rel="external">優惠卷</a>，會省下不少錢的！</p>
<p><img src="https://i.gyazo.com/51c170f1e868dcd4095247b1ffff8ad2.png" alt=""></p>
<p><br><br>3.購買完域名後，就開始設定DNS（<a href="https://t4cgbb.space/2017/08/14/%E7%94%A8hexo%E5%9C%A8github%E5%BB%BA%E7%AB%8B%E5%80%8B%E4%BA%BA%E7%B6%B2%E7%AB%99/" target="_blank" rel="external">關於DNS介紹詳細看這</a>），解析如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">@          A             192.30.252.153</div><div class="line">@          A             192.30.252.154</div><div class="line">www      CNAME    username.github.io.</div></pre></td></tr></table></figure>
<p>（若是有更改，可在官方github的<a href="https://help.github.com/articles/using-a-custom-domain-with-github-pages/" target="_blank" rel="external">page頁面說明</a>中查詢）</p>
<p><br><br>4.然後這時要在去Github網站中，點選settings（齒輪圖案），之後進到頁面往下拉，設定自定義域名並儲存。</p>
<p><img src="https://i.gyazo.com/6999521693ccb1eefa6b3d247dfd306e.png" alt="domain設定"></p>
<p><br><br>5.在站點下資料夾裡的source目錄中，創建一個CNAME的文檔，裡頭填上自己申請的域名，並保存為<strong>所有文件</strong>，如下，<a href="http://wiki.jikexueyuan.com/project/github-pages-basics/cname-file.html" target="_blank" rel="external">可至此參考</a>。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">t4cgbb.space</div></pre></td></tr></table></figure>
<p><br><br>6.配置完成後，需重新上傳站點，一樣三個指令，未來會常常用到的！</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo clean		</div><div class="line">hexo g			</div><div class="line">hexo d</div></pre></td></tr></table></figure>
<p>5.如果出現憑證問題，可以去尋找免費的SSL憑證來代管網域，比如<a href="https://www.cloudflare.com/" target="_blank" rel="external">CLOUDFLARE</a>等。</p>
<p>6.大功告成！<br><br></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;架設Hexo在Github四步驟！&quot;&gt;&lt;a href=&quot;#架設Hexo在Github四步驟！&quot; class=&quot;headerlink&quot; title=&quot;架設Hexo在Github四步驟！&quot;&gt;&lt;/a&gt;架設Hexo在Github四步驟！&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;第一步驟：準備好你的github及環境配置&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;第二步驟：hexo的安裝&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;第三步驟：將hexo上傳github&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;第四步驟：申請域名綁定域名！（自行選配）&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="網站相關" scheme="http://yoursite.com/categories/%E7%B6%B2%E7%AB%99%E7%9B%B8%E9%97%9C/"/>
    
      <category term="hexo" scheme="http://yoursite.com/categories/%E7%B6%B2%E7%AB%99%E7%9B%B8%E9%97%9C/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
  </entry>
  
</feed>
